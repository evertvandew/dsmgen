

###############################################################################
# Structural Diagrams
###############################################################################

Enum cardinality {
    One, ZeroOrOne, ZeroOrMore, OneOrMore, Ordered
}

Enum permission {
    Public, Restricted, Private
}

Entity stereotype {
    required attribute name: string
    optional attribute description: string
}

Entity class {
    required attribute name: string
    attribute stereotype: stereotype
    attribute members: list of (optional permission, name: string, optional type: string)
    attribute methods: list of (optional permission, name: string, optional signature: string)
    attribute messages: list of (name: string, optional arguments: string)
    attribute description: string
}

Relationship inherits {
    connects class to class
}

Relationship dependency {
    connects class to class
}

Relationship aggregation {
    connects class to class
    attribute from: cardinality
    attribute to: cardinality
    attribute name: string
}

Relationship composition inherits from aggregation {
}

Relationship association inherits from aggregation {
    optional relationship to class
}

Entity note {
    required attribute description: string
    attribute anchor: Entity or Relationship
}

# Specifically for Component diagrams

entity Protocol {
    attribute name: string
    attribute description: string
    attribute messages: list of (name: string)
}

entity Component {
    required attribute name: string
    attribute Required: list of (name: string, interface: Protocol)
    attribute Provided: list of (name: string, interface: Protocol)
    attribute Parent: Component
    attribute stereotype: string
}

relationship ProtocolledConnection {
    connects Component.Outputs.element to Component.Inputs.element
    attribute stereotype: enum{Connection, Delegate}
}


# Structural Diagrams

diagram ClassDiagram {
    Entities: class, note
    Relationships: inherits, dependency, aggregation, composition, association
}

diagram ComponentDiagram {
    Entities: Component, note
    Relationships: ProtocolledConnection
}



###############################################################################
# Behavioral Diagrams
###############################################################################

Enum usecase_stereotypes {
    Includes, Extends, Generalizes
}

Entity usecase {
    required attribute name: string
    attribute description: string
}

Entity actor {
    required attribute name: string    
}

Entity communication {
    attribute name: string
    attribute description: string
    attribute stereotype: usecase_stereotypes
}

Entity object {
    required attribute class: class
}

